"""create_database

Revision ID: ce67f068225c
Revises: 
Create Date: 2024-04-04 12:11:49.065052

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ce67f068225c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tag', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Tag_tag'), 'Tag', ['tag'], unique=False)
    op.create_table('User',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_User_email'), 'User', ['email'], unique=True)
    op.create_index(op.f('ix_User_role'), 'User', ['role'], unique=False)
    op.create_index(op.f('ix_User_username'), 'User', ['username'], unique=True)
    op.create_table('Image',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('image', sa.LargeBinary(), nullable=False),
    sa.Column('segmented_image', sa.LargeBinary(), nullable=True),
    sa.Column('coordintes_classes', sa.JSON(), nullable=True),
    sa.Column('upload_date', sa.Date(), nullable=False),
    sa.Column('uploader_id', sa.Integer(), nullable=True),
    sa.Column('moderator_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['moderator_id'], ['User.id'], ),
    sa.ForeignKeyConstraint(['uploader_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Image_upload_date'), 'Image', ['upload_date'], unique=False)
    op.create_table('Comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('super_tag', sa.Boolean(), nullable=False),
    sa.Column('comment_date', sa.Date(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['Image.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['Tag.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Comment_comment_date'), 'Comment', ['comment_date'], unique=False)
    op.create_index(op.f('ix_Comment_super_tag'), 'Comment', ['super_tag'], unique=False)
    op.create_table('ImageLikes',
    sa.Column('Image', sa.Integer(), nullable=True),
    sa.Column('User', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Image'], ['Image.id'], ),
    sa.ForeignKeyConstraint(['User'], ['User.id'], )
    )
    op.create_table('CommentLikes',
    sa.Column('Comment', sa.Integer(), nullable=True),
    sa.Column('User', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Comment'], ['Comment.id'], ),
    sa.ForeignKeyConstraint(['User'], ['User.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('CommentLikes')
    op.drop_table('ImageLikes')
    op.drop_index(op.f('ix_Comment_super_tag'), table_name='Comment')
    op.drop_index(op.f('ix_Comment_comment_date'), table_name='Comment')
    op.drop_table('Comment')
    op.drop_index(op.f('ix_Image_upload_date'), table_name='Image')
    op.drop_table('Image')
    op.drop_index(op.f('ix_User_username'), table_name='User')
    op.drop_index(op.f('ix_User_role'), table_name='User')
    op.drop_index(op.f('ix_User_email'), table_name='User')
    op.drop_table('User')
    op.drop_index(op.f('ix_Tag_tag'), table_name='Tag')
    op.drop_table('Tag')
    # ### end Alembic commands ###
